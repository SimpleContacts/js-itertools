{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_sum",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "_sum",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            9,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./_sum",
        "raw": "'./_sum'",
        "range": [
          21,
          29
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 21
          },
          "end": {
            "line": 1,
            "column": 29
          }
        }
      },
      "range": [
        0,
        31
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 31
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Sums the elements of the input iterable. An optional initializer parameter\n * allows to start the sum of the elements at a chosen value. The default value\n * for the initializer parameter is <code>0</code>.\n *\n * @example\n * sum( range( 10 ) ) ; // returns 45\n *\n * @example\n * sum( range( 10 ) , 100 ) ; // returns 145\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Object} [initializer=0] - The initial value of the sum.\n * @returns {Object} - The sum of the initializer with the elements of\n * <code>iterable</code>.\n *\n ",
          "range": [
            33,
            585
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "sum",
          "range": [
            602,
            605
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 16
            },
            "end": {
              "line": 20,
              "column": 19
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              608,
              616
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 22
              },
              "end": {
                "line": 20,
                "column": 30
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "initializer",
              "range": [
                619,
                630
              ],
              "loc": {
                "start": {
                  "line": 20,
                  "column": 33
                },
                "end": {
                  "line": 20,
                  "column": 44
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "range": [
                633,
                634
              ],
              "loc": {
                "start": {
                  "line": 20,
                  "column": 47
                },
                "end": {
                  "line": 20,
                  "column": 48
                }
              }
            },
            "range": [
              619,
              634
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 33
              },
              "end": {
                "line": 20,
                "column": 48
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "_sum",
                  "range": [
                    648,
                    652
                  ],
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 8
                    },
                    "end": {
                      "line": 22,
                      "column": 12
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "iterable",
                    "range": [
                      654,
                      662
                    ],
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 14
                      },
                      "end": {
                        "line": 22,
                        "column": 22
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "initializer",
                    "range": [
                      665,
                      676
                    ],
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 25
                      },
                      "end": {
                        "line": 22,
                        "column": 36
                      }
                    }
                  }
                ],
                "range": [
                  648,
                  678
                ],
                "loc": {
                  "start": {
                    "line": 22,
                    "column": 8
                  },
                  "end": {
                    "line": 22,
                    "column": 38
                  }
                }
              },
              "range": [
                641,
                680
              ],
              "loc": {
                "start": {
                  "line": 22,
                  "column": 1
                },
                "end": {
                  "line": 22,
                  "column": 40
                }
              }
            }
          ],
          "range": [
            637,
            683
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 51
            },
            "end": {
              "line": 24,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          593,
          683
        ],
        "loc": {
          "start": {
            "line": 20,
            "column": 7
          },
          "end": {
            "line": 24,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Sums the elements of the input iterable. An optional initializer parameter\n * allows to start the sum of the elements at a chosen value. The default value\n * for the initializer parameter is <code>0</code>.\n *\n * @example\n * sum( range( 10 ) ) ; // returns 45\n *\n * @example\n * sum( range( 10 ) , 100 ) ; // returns 145\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Object} [initializer=0] - The initial value of the sum.\n * @returns {Object} - The sum of the initializer with the elements of\n * <code>iterable</code>.\n *\n ",
            "range": [
              33,
              585
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        586,
        683
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Sums the elements of the input iterable. An optional initializer parameter\n * allows to start the sum of the elements at a chosen value. The default value\n * for the initializer parameter is <code>0</code>.\n *\n * @example\n * sum( range( 10 ) ) ; // returns 45\n *\n * @example\n * sum( range( 10 ) , 100 ) ; // returns 145\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Object} [initializer=0] - The initial value of the sum.\n * @returns {Object} - The sum of the initializer with the elements of\n * <code>iterable</code>.\n *\n ",
          "range": [
            33,
            585
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    683
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 24,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Sums the elements of the input iterable. An optional initializer parameter\n * allows to start the sum of the elements at a chosen value. The default value\n * for the initializer parameter is <code>0</code>.\n *\n * @example\n * sum( range( 10 ) ) ; // returns 45\n *\n * @example\n * sum( range( 10 ) , 100 ) ; // returns 145\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Object} [initializer=0] - The initial value of the sum.\n * @returns {Object} - The sum of the initializer with the elements of\n * <code>iterable</code>.\n *\n ",
      "range": [
        33,
        585
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    }
  ]
}