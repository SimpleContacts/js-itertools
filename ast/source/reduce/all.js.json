{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "all",
          "range": [
            498,
            501
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 16
            },
            "end": {
              "line": 17,
              "column": 19
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              504,
              512
            ],
            "loc": {
              "start": {
                "line": 17,
                "column": 22
              },
              "end": {
                "line": 17,
                "column": 30
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "item",
                      "range": [
                        529,
                        533
                      ],
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 11
                        },
                        "end": {
                          "line": 19,
                          "column": 15
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      529,
                      533
                    ],
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 11
                      },
                      "end": {
                        "line": 19,
                        "column": 15
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  525,
                  533
                ],
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 7
                  },
                  "end": {
                    "line": 19,
                    "column": 15
                  }
                }
              },
              "right": {
                "type": "Identifier",
                "name": "iterable",
                "range": [
                  537,
                  545
                ],
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 19
                  },
                  "end": {
                    "line": 19,
                    "column": 27
                  }
                }
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "Identifier",
                        "name": "item",
                        "range": [
                          559,
                          563
                        ],
                        "loc": {
                          "start": {
                            "line": 21,
                            "column": 8
                          },
                          "end": {
                            "line": 21,
                            "column": 12
                          }
                        }
                      },
                      "prefix": true,
                      "range": [
                        558,
                        563
                      ],
                      "loc": {
                        "start": {
                          "line": 21,
                          "column": 7
                        },
                        "end": {
                          "line": 21,
                          "column": 12
                        }
                      }
                    },
                    "consequent": {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": false,
                        "raw": "false",
                        "range": [
                          573,
                          578
                        ],
                        "loc": {
                          "start": {
                            "line": 21,
                            "column": 22
                          },
                          "end": {
                            "line": 21,
                            "column": 27
                          }
                        }
                      },
                      "range": [
                        566,
                        580
                      ],
                      "loc": {
                        "start": {
                          "line": 21,
                          "column": 15
                        },
                        "end": {
                          "line": 21,
                          "column": 29
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      553,
                      580
                    ],
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 2
                      },
                      "end": {
                        "line": 21,
                        "column": 29
                      }
                    }
                  }
                ],
                "range": [
                  548,
                  584
                ],
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 30
                  },
                  "end": {
                    "line": 23,
                    "column": 2
                  }
                }
              },
              "range": [
                519,
                584
              ],
              "loc": {
                "start": {
                  "line": 19,
                  "column": 1
                },
                "end": {
                  "line": 23,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "range": [
                  594,
                  598
                ],
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 8
                  },
                  "end": {
                    "line": 25,
                    "column": 12
                  }
                }
              },
              "range": [
                587,
                600
              ],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 1
                },
                "end": {
                  "line": 25,
                  "column": 14
                }
              }
            }
          ],
          "range": [
            515,
            603
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 33
            },
            "end": {
              "line": 27,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          489,
          603
        ],
        "loc": {
          "start": {
            "line": 17,
            "column": 7
          },
          "end": {
            "line": 27,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Returns true if all of the elements of the input iterable are truthy.\n *\n * @example\n * all( repeat( true ) ) ; // loops forever\n *\n * @example\n * all( repeat( false ) ) ; // returns false\n *\n * @example\n * all( chain( [ nrepeat( true , 10 ) , repeat( false ) ) ) ; // returns false\n *\n * @param {Iterable} iterable - The input iterable.\n * @returns {Boolean} Returns <code>true</code> if all element of\n * <code>iterable</code> are truthy, <code>false</code> otherwise.\n ",
            "range": [
              0,
              481
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        482,
        603
      ],
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns true if all of the elements of the input iterable are truthy.\n *\n * @example\n * all( repeat( true ) ) ; // loops forever\n *\n * @example\n * all( repeat( false ) ) ; // returns false\n *\n * @example\n * all( chain( [ nrepeat( true , 10 ) , repeat( false ) ) ) ; // returns false\n *\n * @param {Iterable} iterable - The input iterable.\n * @returns {Boolean} Returns <code>true</code> if all element of\n * <code>iterable</code> are truthy, <code>false</code> otherwise.\n ",
          "range": [
            0,
            481
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    482,
    603
  ],
  "loc": {
    "start": {
      "line": 17,
      "column": 0
    },
    "end": {
      "line": 27,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Returns true if all of the elements of the input iterable are truthy.\n *\n * @example\n * all( repeat( true ) ) ; // loops forever\n *\n * @example\n * all( repeat( false ) ) ; // returns false\n *\n * @example\n * all( chain( [ nrepeat( true , 10 ) , repeat( false ) ) ) ; // returns false\n *\n * @param {Iterable} iterable - The input iterable.\n * @returns {Boolean} Returns <code>true</code> if all element of\n * <code>iterable</code> are truthy, <code>false</code> otherwise.\n ",
      "range": [
        0,
        481
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    }
  ]
}