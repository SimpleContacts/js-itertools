{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "iter",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "iter",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            9,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../base/iter",
        "raw": "'../base/iter'",
        "range": [
          21,
          35
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 21
          },
          "end": {
            "line": 1,
            "column": 35
          }
        }
      },
      "range": [
        0,
        37
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 37
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns the smallest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * min( ( a , b ) => a - b , range( 10 ) ) ; // returns 0\n *\n * @example\n * min( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The smallest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
          "range": [
            39,
            698
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "min",
          "range": [
            715,
            718
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 16
            },
            "end": {
              "line": 21,
              "column": 19
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "compare",
            "range": [
              721,
              728
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 22
              },
              "end": {
                "line": 21,
                "column": 29
              }
            }
          },
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              731,
              739
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 32
              },
              "end": {
                "line": 21,
                "column": 40
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "dflt",
              "range": [
                742,
                746
              ],
              "loc": {
                "start": {
                  "line": 21,
                  "column": 43
                },
                "end": {
                  "line": 21,
                  "column": 47
                }
              }
            },
            "right": {
              "type": "Identifier",
              "name": "undefined",
              "range": [
                749,
                758
              ],
              "loc": {
                "start": {
                  "line": 21,
                  "column": 50
                },
                "end": {
                  "line": 21,
                  "column": 59
                }
              }
            },
            "range": [
              742,
              758
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 43
              },
              "end": {
                "line": 21,
                "column": 59
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "iterator",
                    "range": [
                      769,
                      777
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 5
                      },
                      "end": {
                        "line": 23,
                        "column": 13
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "iter",
                      "range": [
                        780,
                        784
                      ],
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 16
                        },
                        "end": {
                          "line": 23,
                          "column": 20
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "iterable",
                        "range": [
                          786,
                          794
                        ],
                        "loc": {
                          "start": {
                            "line": 23,
                            "column": 22
                          },
                          "end": {
                            "line": 23,
                            "column": 30
                          }
                        }
                      }
                    ],
                    "range": [
                      780,
                      796
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 16
                      },
                      "end": {
                        "line": 23,
                        "column": 32
                      }
                    }
                  },
                  "range": [
                    769,
                    796
                  ],
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 5
                    },
                    "end": {
                      "line": 23,
                      "column": 32
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                765,
                798
              ],
              "loc": {
                "start": {
                  "line": 23,
                  "column": 1
                },
                "end": {
                  "line": 23,
                  "column": 34
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "first",
                    "range": [
                      805,
                      810
                    ],
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 5
                      },
                      "end": {
                        "line": 25,
                        "column": 10
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "iterator",
                        "range": [
                          813,
                          821
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 13
                          },
                          "end": {
                            "line": 25,
                            "column": 21
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "next",
                        "range": [
                          822,
                          826
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 22
                          },
                          "end": {
                            "line": 25,
                            "column": 26
                          }
                        }
                      },
                      "range": [
                        813,
                        826
                      ],
                      "loc": {
                        "start": {
                          "line": 25,
                          "column": 13
                        },
                        "end": {
                          "line": 25,
                          "column": 26
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      813,
                      829
                    ],
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 13
                      },
                      "end": {
                        "line": 25,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    805,
                    829
                  ],
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 5
                    },
                    "end": {
                      "line": 25,
                      "column": 29
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                801,
                831
              ],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 1
                },
                "end": {
                  "line": 25,
                  "column": 31
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "first",
                  "range": [
                    839,
                    844
                  ],
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 6
                    },
                    "end": {
                      "line": 27,
                      "column": 11
                    }
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "done",
                  "range": [
                    845,
                    849
                  ],
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 12
                    },
                    "end": {
                      "line": 27,
                      "column": 16
                    }
                  }
                },
                "range": [
                  839,
                  849
                ],
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 6
                  },
                  "end": {
                    "line": 27,
                    "column": 16
                  }
                }
              },
              "consequent": {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "dflt",
                  "range": [
                    859,
                    863
                  ],
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 26
                    },
                    "end": {
                      "line": 27,
                      "column": 30
                    }
                  }
                },
                "range": [
                  852,
                  865
                ],
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 19
                  },
                  "end": {
                    "line": 27,
                    "column": 32
                  }
                }
              },
              "alternate": null,
              "range": [
                834,
                865
              ],
              "loc": {
                "start": {
                  "line": 27,
                  "column": 1
                },
                "end": {
                  "line": 27,
                  "column": 32
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "smallest",
                    "range": [
                      872,
                      880
                    ],
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 5
                      },
                      "end": {
                        "line": 29,
                        "column": 13
                      }
                    }
                  },
                  "init": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "first",
                      "range": [
                        883,
                        888
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 16
                        },
                        "end": {
                          "line": 29,
                          "column": 21
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "value",
                      "range": [
                        889,
                        894
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 22
                        },
                        "end": {
                          "line": 29,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      883,
                      894
                    ],
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 16
                      },
                      "end": {
                        "line": 29,
                        "column": 27
                      }
                    }
                  },
                  "range": [
                    872,
                    894
                  ],
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 5
                    },
                    "end": {
                      "line": 29,
                      "column": 27
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                868,
                896
              ],
              "loc": {
                "start": {
                  "line": 29,
                  "column": 1
                },
                "end": {
                  "line": 29,
                  "column": 29
                }
              }
            },
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "candidate",
                      "range": [
                        909,
                        918
                      ],
                      "loc": {
                        "start": {
                          "line": 31,
                          "column": 11
                        },
                        "end": {
                          "line": 31,
                          "column": 20
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      909,
                      918
                    ],
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 11
                      },
                      "end": {
                        "line": 31,
                        "column": 20
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  905,
                  918
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 7
                  },
                  "end": {
                    "line": 31,
                    "column": 20
                  }
                }
              },
              "right": {
                "type": "Identifier",
                "name": "iterator",
                "range": [
                  922,
                  930
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 24
                  },
                  "end": {
                    "line": 31,
                    "column": 32
                  }
                }
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "compare",
                          "range": [
                            943,
                            950
                          ],
                          "loc": {
                            "start": {
                              "line": 33,
                              "column": 7
                            },
                            "end": {
                              "line": 33,
                              "column": 14
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              952,
                              961
                            ],
                            "loc": {
                              "start": {
                                "line": 33,
                                "column": 16
                              },
                              "end": {
                                "line": 33,
                                "column": 25
                              }
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "smallest",
                            "range": [
                              964,
                              972
                            ],
                            "loc": {
                              "start": {
                                "line": 33,
                                "column": 28
                              },
                              "end": {
                                "line": 33,
                                "column": 36
                              }
                            }
                          }
                        ],
                        "range": [
                          943,
                          974
                        ],
                        "loc": {
                          "start": {
                            "line": 33,
                            "column": 7
                          },
                          "end": {
                            "line": 33,
                            "column": 38
                          }
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "range": [
                          977,
                          978
                        ],
                        "loc": {
                          "start": {
                            "line": 33,
                            "column": 41
                          },
                          "end": {
                            "line": 33,
                            "column": 42
                          }
                        }
                      },
                      "range": [
                        943,
                        978
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 7
                        },
                        "end": {
                          "line": 33,
                          "column": 42
                        }
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "smallest",
                              "range": [
                                987,
                                995
                              ],
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 3
                                },
                                "end": {
                                  "line": 35,
                                  "column": 11
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                998,
                                1007
                              ],
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 14
                                },
                                "end": {
                                  "line": 35,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              987,
                              1007
                            ],
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 3
                              },
                              "end": {
                                "line": 35,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            987,
                            1009
                          ],
                          "loc": {
                            "start": {
                              "line": 35,
                              "column": 3
                            },
                            "end": {
                              "line": 35,
                              "column": 25
                            }
                          }
                        }
                      ],
                      "range": [
                        981,
                        1014
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 45
                        },
                        "end": {
                          "line": 37,
                          "column": 3
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      938,
                      1014
                    ],
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 2
                      },
                      "end": {
                        "line": 37,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  933,
                  1018
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 35
                  },
                  "end": {
                    "line": 39,
                    "column": 2
                  }
                }
              },
              "range": [
                899,
                1018
              ],
              "loc": {
                "start": {
                  "line": 31,
                  "column": 1
                },
                "end": {
                  "line": 39,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Identifier",
                "name": "smallest",
                "range": [
                  1028,
                  1036
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 8
                  },
                  "end": {
                    "line": 41,
                    "column": 16
                  }
                }
              },
              "range": [
                1021,
                1038
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 1
                },
                "end": {
                  "line": 41,
                  "column": 18
                }
              }
            }
          ],
          "range": [
            761,
            1041
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 62
            },
            "end": {
              "line": 43,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          706,
          1041
        ],
        "loc": {
          "start": {
            "line": 21,
            "column": 7
          },
          "end": {
            "line": 43,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Returns the smallest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * min( ( a , b ) => a - b , range( 10 ) ) ; // returns 0\n *\n * @example\n * min( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The smallest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
            "range": [
              39,
              698
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        699,
        1041
      ],
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns the smallest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * min( ( a , b ) => a - b , range( 10 ) ) ; // returns 0\n *\n * @example\n * min( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The smallest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
          "range": [
            39,
            698
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1041
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 43,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Returns the smallest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * min( ( a , b ) => a - b , range( 10 ) ) ; // returns 0\n *\n * @example\n * min( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The smallest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
      "range": [
        39,
        698
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    }
  ]
}