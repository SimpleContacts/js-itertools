{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "some",
          "range": [
            656,
            660
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 16
            },
            "end": {
              "line": 24,
              "column": 20
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              663,
              671
            ],
            "loc": {
              "start": {
                "line": 24,
                "column": 23
              },
              "end": {
                "line": 24,
                "column": 31
              }
            }
          },
          {
            "type": "Identifier",
            "name": "n",
            "range": [
              674,
              675
            ],
            "loc": {
              "start": {
                "line": 24,
                "column": 34
              },
              "end": {
                "line": 24,
                "column": 35
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "<=",
                "left": {
                  "type": "Identifier",
                  "name": "n",
                  "range": [
                    687,
                    688
                  ],
                  "loc": {
                    "start": {
                      "line": 26,
                      "column": 6
                    },
                    "end": {
                      "line": 26,
                      "column": 7
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "range": [
                    692,
                    693
                  ],
                  "loc": {
                    "start": {
                      "line": 26,
                      "column": 11
                    },
                    "end": {
                      "line": 26,
                      "column": 12
                    }
                  }
                },
                "range": [
                  687,
                  693
                ],
                "loc": {
                  "start": {
                    "line": 26,
                    "column": 6
                  },
                  "end": {
                    "line": 26,
                    "column": 12
                  }
                }
              },
              "consequent": {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "range": [
                    703,
                    707
                  ],
                  "loc": {
                    "start": {
                      "line": 26,
                      "column": 22
                    },
                    "end": {
                      "line": 26,
                      "column": 26
                    }
                  }
                },
                "range": [
                  696,
                  709
                ],
                "loc": {
                  "start": {
                    "line": 26,
                    "column": 15
                  },
                  "end": {
                    "line": 26,
                    "column": 28
                  }
                }
              },
              "alternate": null,
              "range": [
                682,
                709
              ],
              "loc": {
                "start": {
                  "line": 26,
                  "column": 1
                },
                "end": {
                  "line": 26,
                  "column": 28
                }
              }
            },
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "item",
                      "range": [
                        722,
                        726
                      ],
                      "loc": {
                        "start": {
                          "line": 28,
                          "column": 11
                        },
                        "end": {
                          "line": 28,
                          "column": 15
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      722,
                      726
                    ],
                    "loc": {
                      "start": {
                        "line": 28,
                        "column": 11
                      },
                      "end": {
                        "line": 28,
                        "column": 15
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  718,
                  726
                ],
                "loc": {
                  "start": {
                    "line": 28,
                    "column": 7
                  },
                  "end": {
                    "line": 28,
                    "column": 15
                  }
                }
              },
              "right": {
                "type": "Identifier",
                "name": "iterable",
                "range": [
                  730,
                  738
                ],
                "loc": {
                  "start": {
                    "line": 28,
                    "column": 19
                  },
                  "end": {
                    "line": 28,
                    "column": 27
                  }
                }
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "Identifier",
                        "name": "item",
                        "range": [
                          751,
                          755
                        ],
                        "loc": {
                          "start": {
                            "line": 30,
                            "column": 7
                          },
                          "end": {
                            "line": 30,
                            "column": 11
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UpdateExpression",
                          "operator": "--",
                          "argument": {
                            "type": "Identifier",
                            "name": "n",
                            "range": [
                              761,
                              762
                            ],
                            "loc": {
                              "start": {
                                "line": 30,
                                "column": 17
                              },
                              "end": {
                                "line": 30,
                                "column": 18
                              }
                            }
                          },
                          "prefix": true,
                          "range": [
                            759,
                            762
                          ],
                          "loc": {
                            "start": {
                              "line": 30,
                              "column": 15
                            },
                            "end": {
                              "line": 30,
                              "column": 18
                            }
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "range": [
                            767,
                            768
                          ],
                          "loc": {
                            "start": {
                              "line": 30,
                              "column": 23
                            },
                            "end": {
                              "line": 30,
                              "column": 24
                            }
                          }
                        },
                        "range": [
                          759,
                          768
                        ],
                        "loc": {
                          "start": {
                            "line": 30,
                            "column": 15
                          },
                          "end": {
                            "line": 30,
                            "column": 24
                          }
                        }
                      },
                      "range": [
                        751,
                        768
                      ],
                      "loc": {
                        "start": {
                          "line": 30,
                          "column": 7
                        },
                        "end": {
                          "line": 30,
                          "column": 24
                        }
                      }
                    },
                    "consequent": {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "range": [
                          778,
                          782
                        ],
                        "loc": {
                          "start": {
                            "line": 30,
                            "column": 34
                          },
                          "end": {
                            "line": 30,
                            "column": 38
                          }
                        }
                      },
                      "range": [
                        771,
                        784
                      ],
                      "loc": {
                        "start": {
                          "line": 30,
                          "column": 27
                        },
                        "end": {
                          "line": 30,
                          "column": 40
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      746,
                      784
                    ],
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 2
                      },
                      "end": {
                        "line": 30,
                        "column": 40
                      }
                    }
                  }
                ],
                "range": [
                  741,
                  788
                ],
                "loc": {
                  "start": {
                    "line": 28,
                    "column": 30
                  },
                  "end": {
                    "line": 32,
                    "column": 2
                  }
                }
              },
              "range": [
                712,
                788
              ],
              "loc": {
                "start": {
                  "line": 28,
                  "column": 1
                },
                "end": {
                  "line": 32,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "range": [
                  798,
                  803
                ],
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 8
                  },
                  "end": {
                    "line": 34,
                    "column": 13
                  }
                }
              },
              "range": [
                791,
                805
              ],
              "loc": {
                "start": {
                  "line": 34,
                  "column": 1
                },
                "end": {
                  "line": 34,
                  "column": 15
                }
              }
            }
          ],
          "range": [
            678,
            808
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 38
            },
            "end": {
              "line": 36,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          647,
          808
        ],
        "loc": {
          "start": {
            "line": 24,
            "column": 7
          },
          "end": {
            "line": 36,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Returns true if at least some of the elements of the input iterable are\n * truthy.\n *\n * @example\n * some( repeat( true ) , 100 ) ; // returns true\n *\n * @example\n * some( repeat( false ) , 0 ) ; // returns true\n *\n * @example\n * some( repeat( false ) , 10 ) ; // loops forever\n *\n * @example\n * some( nrepeat( true , 10 ) , 11 ) ; // returns false\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} n - The number of elements that should be truthy.\n * @returns {Boolean} Returns <code>true</code> if at least <code>n</code>\n * elements of <code>iterable</code> are truthy, <code>false</code> otherwise.\n ",
            "range": [
              1,
              638
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        640,
        808
      ],
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns true if at least some of the elements of the input iterable are\n * truthy.\n *\n * @example\n * some( repeat( true ) , 100 ) ; // returns true\n *\n * @example\n * some( repeat( false ) , 0 ) ; // returns true\n *\n * @example\n * some( repeat( false ) , 10 ) ; // loops forever\n *\n * @example\n * some( nrepeat( true , 10 ) , 11 ) ; // returns false\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} n - The number of elements that should be truthy.\n * @returns {Boolean} Returns <code>true</code> if at least <code>n</code>\n * elements of <code>iterable</code> are truthy, <code>false</code> otherwise.\n ",
          "range": [
            1,
            638
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    640,
    808
  ],
  "loc": {
    "start": {
      "line": 24,
      "column": 0
    },
    "end": {
      "line": 36,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Returns true if at least some of the elements of the input iterable are\n * truthy.\n *\n * @example\n * some( repeat( true ) , 100 ) ; // returns true\n *\n * @example\n * some( repeat( false ) , 0 ) ; // returns true\n *\n * @example\n * some( repeat( false ) , 10 ) ; // loops forever\n *\n * @example\n * some( nrepeat( true , 10 ) , 11 ) ; // returns false\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} n - The number of elements that should be truthy.\n * @returns {Boolean} Returns <code>true</code> if at least <code>n</code>\n * elements of <code>iterable</code> are truthy, <code>false</code> otherwise.\n ",
      "range": [
        1,
        638
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    }
  ]
}