{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "iter",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "iter",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            9,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../base/iter",
        "raw": "'../base/iter'",
        "range": [
          21,
          35
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 21
          },
          "end": {
            "line": 1,
            "column": 35
          }
        }
      },
      "range": [
        0,
        37
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 37
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns the largest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * max( ( a , b ) => a - b , range( 10 ) ) ; // returns 9\n *\n * @example\n * max( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The largest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
          "range": [
            39,
            696
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "max",
          "range": [
            713,
            716
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 16
            },
            "end": {
              "line": 21,
              "column": 19
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "compare",
            "range": [
              719,
              726
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 22
              },
              "end": {
                "line": 21,
                "column": 29
              }
            }
          },
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              729,
              737
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 32
              },
              "end": {
                "line": 21,
                "column": 40
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "dflt",
              "range": [
                740,
                744
              ],
              "loc": {
                "start": {
                  "line": 21,
                  "column": 43
                },
                "end": {
                  "line": 21,
                  "column": 47
                }
              }
            },
            "right": {
              "type": "Identifier",
              "name": "undefined",
              "range": [
                747,
                756
              ],
              "loc": {
                "start": {
                  "line": 21,
                  "column": 50
                },
                "end": {
                  "line": 21,
                  "column": 59
                }
              }
            },
            "range": [
              740,
              756
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 43
              },
              "end": {
                "line": 21,
                "column": 59
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "iterator",
                    "range": [
                      767,
                      775
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 5
                      },
                      "end": {
                        "line": 23,
                        "column": 13
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "iter",
                      "range": [
                        778,
                        782
                      ],
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 16
                        },
                        "end": {
                          "line": 23,
                          "column": 20
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "iterable",
                        "range": [
                          784,
                          792
                        ],
                        "loc": {
                          "start": {
                            "line": 23,
                            "column": 22
                          },
                          "end": {
                            "line": 23,
                            "column": 30
                          }
                        }
                      }
                    ],
                    "range": [
                      778,
                      794
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 16
                      },
                      "end": {
                        "line": 23,
                        "column": 32
                      }
                    }
                  },
                  "range": [
                    767,
                    794
                  ],
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 5
                    },
                    "end": {
                      "line": 23,
                      "column": 32
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                763,
                796
              ],
              "loc": {
                "start": {
                  "line": 23,
                  "column": 1
                },
                "end": {
                  "line": 23,
                  "column": 34
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "first",
                    "range": [
                      803,
                      808
                    ],
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 5
                      },
                      "end": {
                        "line": 25,
                        "column": 10
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "iterator",
                        "range": [
                          811,
                          819
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 13
                          },
                          "end": {
                            "line": 25,
                            "column": 21
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "next",
                        "range": [
                          820,
                          824
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 22
                          },
                          "end": {
                            "line": 25,
                            "column": 26
                          }
                        }
                      },
                      "range": [
                        811,
                        824
                      ],
                      "loc": {
                        "start": {
                          "line": 25,
                          "column": 13
                        },
                        "end": {
                          "line": 25,
                          "column": 26
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      811,
                      826
                    ],
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 13
                      },
                      "end": {
                        "line": 25,
                        "column": 28
                      }
                    }
                  },
                  "range": [
                    803,
                    826
                  ],
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 5
                    },
                    "end": {
                      "line": 25,
                      "column": 28
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                799,
                828
              ],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 1
                },
                "end": {
                  "line": 25,
                  "column": 30
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "first",
                  "range": [
                    836,
                    841
                  ],
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 6
                    },
                    "end": {
                      "line": 27,
                      "column": 11
                    }
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "done",
                  "range": [
                    842,
                    846
                  ],
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 12
                    },
                    "end": {
                      "line": 27,
                      "column": 16
                    }
                  }
                },
                "range": [
                  836,
                  846
                ],
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 6
                  },
                  "end": {
                    "line": 27,
                    "column": 16
                  }
                }
              },
              "consequent": {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "dflt",
                  "range": [
                    856,
                    860
                  ],
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 26
                    },
                    "end": {
                      "line": 27,
                      "column": 30
                    }
                  }
                },
                "range": [
                  849,
                  862
                ],
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 19
                  },
                  "end": {
                    "line": 27,
                    "column": 32
                  }
                }
              },
              "alternate": null,
              "range": [
                831,
                862
              ],
              "loc": {
                "start": {
                  "line": 27,
                  "column": 1
                },
                "end": {
                  "line": 27,
                  "column": 32
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "largest",
                    "range": [
                      869,
                      876
                    ],
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 5
                      },
                      "end": {
                        "line": 29,
                        "column": 12
                      }
                    }
                  },
                  "init": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "first",
                      "range": [
                        879,
                        884
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 15
                        },
                        "end": {
                          "line": 29,
                          "column": 20
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "value",
                      "range": [
                        885,
                        890
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 21
                        },
                        "end": {
                          "line": 29,
                          "column": 26
                        }
                      }
                    },
                    "range": [
                      879,
                      890
                    ],
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 15
                      },
                      "end": {
                        "line": 29,
                        "column": 26
                      }
                    }
                  },
                  "range": [
                    869,
                    890
                  ],
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 5
                    },
                    "end": {
                      "line": 29,
                      "column": 26
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                865,
                892
              ],
              "loc": {
                "start": {
                  "line": 29,
                  "column": 1
                },
                "end": {
                  "line": 29,
                  "column": 28
                }
              }
            },
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "candidate",
                      "range": [
                        905,
                        914
                      ],
                      "loc": {
                        "start": {
                          "line": 31,
                          "column": 11
                        },
                        "end": {
                          "line": 31,
                          "column": 20
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      905,
                      914
                    ],
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 11
                      },
                      "end": {
                        "line": 31,
                        "column": 20
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  901,
                  914
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 7
                  },
                  "end": {
                    "line": 31,
                    "column": 20
                  }
                }
              },
              "right": {
                "type": "Identifier",
                "name": "iterator",
                "range": [
                  918,
                  926
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 24
                  },
                  "end": {
                    "line": 31,
                    "column": 32
                  }
                }
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": ">",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "compare",
                          "range": [
                            939,
                            946
                          ],
                          "loc": {
                            "start": {
                              "line": 33,
                              "column": 7
                            },
                            "end": {
                              "line": 33,
                              "column": 14
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              948,
                              957
                            ],
                            "loc": {
                              "start": {
                                "line": 33,
                                "column": 16
                              },
                              "end": {
                                "line": 33,
                                "column": 25
                              }
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "largest",
                            "range": [
                              960,
                              967
                            ],
                            "loc": {
                              "start": {
                                "line": 33,
                                "column": 28
                              },
                              "end": {
                                "line": 33,
                                "column": 35
                              }
                            }
                          }
                        ],
                        "range": [
                          939,
                          969
                        ],
                        "loc": {
                          "start": {
                            "line": 33,
                            "column": 7
                          },
                          "end": {
                            "line": 33,
                            "column": 37
                          }
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "range": [
                          972,
                          973
                        ],
                        "loc": {
                          "start": {
                            "line": 33,
                            "column": 40
                          },
                          "end": {
                            "line": 33,
                            "column": 41
                          }
                        }
                      },
                      "range": [
                        939,
                        973
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 7
                        },
                        "end": {
                          "line": 33,
                          "column": 41
                        }
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "largest",
                              "range": [
                                982,
                                989
                              ],
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 3
                                },
                                "end": {
                                  "line": 35,
                                  "column": 10
                                }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                992,
                                1001
                              ],
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 13
                                },
                                "end": {
                                  "line": 35,
                                  "column": 22
                                }
                              }
                            },
                            "range": [
                              982,
                              1001
                            ],
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 3
                              },
                              "end": {
                                "line": 35,
                                "column": 22
                              }
                            }
                          },
                          "range": [
                            982,
                            1003
                          ],
                          "loc": {
                            "start": {
                              "line": 35,
                              "column": 3
                            },
                            "end": {
                              "line": 35,
                              "column": 24
                            }
                          }
                        }
                      ],
                      "range": [
                        976,
                        1008
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 44
                        },
                        "end": {
                          "line": 37,
                          "column": 3
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      934,
                      1008
                    ],
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 2
                      },
                      "end": {
                        "line": 37,
                        "column": 3
                      }
                    }
                  }
                ],
                "range": [
                  929,
                  1012
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 35
                  },
                  "end": {
                    "line": 39,
                    "column": 2
                  }
                }
              },
              "range": [
                895,
                1012
              ],
              "loc": {
                "start": {
                  "line": 31,
                  "column": 1
                },
                "end": {
                  "line": 39,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Identifier",
                "name": "largest",
                "range": [
                  1022,
                  1029
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 8
                  },
                  "end": {
                    "line": 41,
                    "column": 15
                  }
                }
              },
              "range": [
                1015,
                1031
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 1
                },
                "end": {
                  "line": 41,
                  "column": 17
                }
              }
            }
          ],
          "range": [
            759,
            1034
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 62
            },
            "end": {
              "line": 43,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          704,
          1034
        ],
        "loc": {
          "start": {
            "line": 21,
            "column": 7
          },
          "end": {
            "line": 43,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Returns the largest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * max( ( a , b ) => a - b , range( 10 ) ) ; // returns 9\n *\n * @example\n * max( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The largest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
            "range": [
              39,
              696
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        697,
        1034
      ],
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns the largest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * max( ( a , b ) => a - b , range( 10 ) ) ; // returns 9\n *\n * @example\n * max( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The largest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
          "range": [
            39,
            696
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1034
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 43,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Returns the largest element of the input iterable according\n * to some comparison function.\n *\n * @example\n * max( ( a , b ) => a - b , range( 10 ) ) ; // returns 9\n *\n * @example\n * max( ( a , b ) => a - b , range( 0 ) ) ; // returns undefined\n *\n * @param {Function} compare - The comparison function to use. This function\n * must be 2-ary. It must return -1, 0, or 1 depending whether the first\n * parameter is, respectively, less than, equal to, or greater than the second\n * parameter.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Object} The largest element of <code>iterable</code> according to\n * <code>compare</code>.\n ",
      "range": [
        39,
        696
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    }
  ]
}