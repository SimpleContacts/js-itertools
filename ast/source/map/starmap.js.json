{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "starmap",
          "range": [
            347,
            354
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 17
            },
            "end": {
              "line": 12,
              "column": 24
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "callable",
            "range": [
              357,
              365
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 27
              },
              "end": {
                "line": 12,
                "column": 35
              }
            }
          },
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              368,
              376
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 38
              },
              "end": {
                "line": 12,
                "column": 46
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "args",
                      "range": [
                        393,
                        397
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 11
                        },
                        "end": {
                          "line": 14,
                          "column": 15
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      393,
                      397
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 11
                      },
                      "end": {
                        "line": 14,
                        "column": 15
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  389,
                  397
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 7
                  },
                  "end": {
                    "line": 14,
                    "column": 15
                  }
                }
              },
              "right": {
                "type": "Identifier",
                "name": "iterable",
                "range": [
                  401,
                  409
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 19
                  },
                  "end": {
                    "line": 14,
                    "column": 27
                  }
                }
              },
              "body": {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "YieldExpression",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "callable",
                        "range": [
                          418,
                          426
                        ],
                        "loc": {
                          "start": {
                            "line": 14,
                            "column": 36
                          },
                          "end": {
                            "line": 14,
                            "column": 44
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "range": [
                          427,
                          432
                        ],
                        "loc": {
                          "start": {
                            "line": 14,
                            "column": 45
                          },
                          "end": {
                            "line": 14,
                            "column": 50
                          }
                        }
                      },
                      "range": [
                        418,
                        432
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 36
                        },
                        "end": {
                          "line": 14,
                          "column": 50
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "range": [
                          434,
                          438
                        ],
                        "loc": {
                          "start": {
                            "line": 14,
                            "column": 52
                          },
                          "end": {
                            "line": 14,
                            "column": 56
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "args",
                        "range": [
                          441,
                          445
                        ],
                        "loc": {
                          "start": {
                            "line": 14,
                            "column": 59
                          },
                          "end": {
                            "line": 14,
                            "column": 63
                          }
                        }
                      }
                    ],
                    "range": [
                      418,
                      447
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 36
                      },
                      "end": {
                        "line": 14,
                        "column": 65
                      }
                    }
                  },
                  "delegate": false,
                  "range": [
                    412,
                    447
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 30
                    },
                    "end": {
                      "line": 14,
                      "column": 65
                    }
                  }
                },
                "range": [
                  412,
                  449
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 30
                  },
                  "end": {
                    "line": 14,
                    "column": 67
                  }
                }
              },
              "range": [
                383,
                449
              ],
              "loc": {
                "start": {
                  "line": 14,
                  "column": 1
                },
                "end": {
                  "line": 14,
                  "column": 67
                }
              },
              "trailingComments": [
                {
                  "type": "Line",
                  "value": "for ( let args of iterable ) yield callable( ... ) ;",
                  "range": [
                    451,
                    505
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 1
                    },
                    "end": {
                      "line": 15,
                      "column": 55
                    }
                  }
                }
              ]
            }
          ],
          "range": [
            379,
            508
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 49
            },
            "end": {
              "line": 17,
              "column": 1
            }
          }
        },
        "generator": true,
        "expression": false,
        "range": [
          337,
          508
        ],
        "loc": {
          "start": {
            "line": 12,
            "column": 7
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Same as {@link map} but allows multiple arguments callable functions.\n *\n * @example\n * // return [ 0 , 1 , 4 , 9 ]\n * list( starmap( ( x , y ) => x*y , zip( range( 4 ) , range( 4 ) ) ) ;\n *\n * @param {Function} callable - The callable to use.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Iterator}\n ",
            "range": [
              0,
              329
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        330,
        508
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Same as {@link map} but allows multiple arguments callable functions.\n *\n * @example\n * // return [ 0 , 1 , 4 , 9 ]\n * list( starmap( ( x , y ) => x*y , zip( range( 4 ) , range( 4 ) ) ) ;\n *\n * @param {Function} callable - The callable to use.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Iterator}\n ",
          "range": [
            0,
            329
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    330,
    508
  ],
  "loc": {
    "start": {
      "line": 12,
      "column": 0
    },
    "end": {
      "line": 17,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Same as {@link map} but allows multiple arguments callable functions.\n *\n * @example\n * // return [ 0 , 1 , 4 , 9 ]\n * list( starmap( ( x , y ) => x*y , zip( range( 4 ) , range( 4 ) ) ) ;\n *\n * @param {Function} callable - The callable to use.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Iterator}\n ",
      "range": [
        0,
        329
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "for ( let args of iterable ) yield callable( ... ) ;",
      "range": [
        451,
        505
      ],
      "loc": {
        "start": {
          "line": 15,
          "column": 1
        },
        "end": {
          "line": 15,
          "column": 55
        }
      }
    }
  ]
}