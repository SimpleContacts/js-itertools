{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "filterfalse",
          "range": [
            377,
            388
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 17
            },
            "end": {
              "line": 14,
              "column": 28
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "predicate",
            "range": [
              391,
              400
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 31
              },
              "end": {
                "line": 14,
                "column": 40
              }
            }
          },
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              403,
              411
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 43
              },
              "end": {
                "line": 14,
                "column": 51
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "item",
                      "range": [
                        428,
                        432
                      ],
                      "loc": {
                        "start": {
                          "line": 16,
                          "column": 11
                        },
                        "end": {
                          "line": 16,
                          "column": 15
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      428,
                      432
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 11
                      },
                      "end": {
                        "line": 16,
                        "column": 15
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  424,
                  432
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 7
                  },
                  "end": {
                    "line": 16,
                    "column": 15
                  }
                }
              },
              "right": {
                "type": "Identifier",
                "name": "iterable",
                "range": [
                  436,
                  444
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 19
                  },
                  "end": {
                    "line": 16,
                    "column": 27
                  }
                }
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "predicate",
                          "range": [
                            459,
                            468
                          ],
                          "loc": {
                            "start": {
                              "line": 18,
                              "column": 9
                            },
                            "end": {
                              "line": 18,
                              "column": 18
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "item",
                            "range": [
                              470,
                              474
                            ],
                            "loc": {
                              "start": {
                                "line": 18,
                                "column": 20
                              },
                              "end": {
                                "line": 18,
                                "column": 24
                              }
                            }
                          }
                        ],
                        "range": [
                          459,
                          476
                        ],
                        "loc": {
                          "start": {
                            "line": 18,
                            "column": 9
                          },
                          "end": {
                            "line": 18,
                            "column": 26
                          }
                        }
                      },
                      "prefix": true,
                      "range": [
                        457,
                        476
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 7
                        },
                        "end": {
                          "line": 18,
                          "column": 26
                        }
                      }
                    },
                    "consequent": {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "YieldExpression",
                        "argument": {
                          "type": "Identifier",
                          "name": "item",
                          "range": [
                            485,
                            489
                          ],
                          "loc": {
                            "start": {
                              "line": 18,
                              "column": 35
                            },
                            "end": {
                              "line": 18,
                              "column": 39
                            }
                          }
                        },
                        "delegate": false,
                        "range": [
                          479,
                          489
                        ],
                        "loc": {
                          "start": {
                            "line": 18,
                            "column": 29
                          },
                          "end": {
                            "line": 18,
                            "column": 39
                          }
                        }
                      },
                      "range": [
                        479,
                        491
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 29
                        },
                        "end": {
                          "line": 18,
                          "column": 41
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      452,
                      491
                    ],
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 2
                      },
                      "end": {
                        "line": 18,
                        "column": 41
                      }
                    }
                  }
                ],
                "range": [
                  447,
                  495
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 30
                  },
                  "end": {
                    "line": 20,
                    "column": 2
                  }
                }
              },
              "range": [
                418,
                495
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 1
                },
                "end": {
                  "line": 20,
                  "column": 2
                }
              }
            }
          ],
          "range": [
            414,
            498
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 54
            },
            "end": {
              "line": 22,
              "column": 1
            }
          }
        },
        "generator": true,
        "expression": false,
        "range": [
          367,
          498
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 7
          },
          "end": {
            "line": 22,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Yields all elements from input iterable that do not verify a given predicate.\n *\n * @example\n * // returns [ 0 , 2 , 4 , 6 , 8 ]\n * list( filter( x => x % 2 , range( 10 ) ) ) ;\n *\n * @param {Function} predicate - A unary function that returns a truthy or\n * falsy value.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Iterator}\n *\n ",
            "range": [
              0,
              359
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        360,
        498
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Yields all elements from input iterable that do not verify a given predicate.\n *\n * @example\n * // returns [ 0 , 2 , 4 , 6 , 8 ]\n * list( filter( x => x % 2 , range( 10 ) ) ) ;\n *\n * @param {Function} predicate - A unary function that returns a truthy or\n * falsy value.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Iterator}\n *\n ",
          "range": [
            0,
            359
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    360,
    498
  ],
  "loc": {
    "start": {
      "line": 14,
      "column": 0
    },
    "end": {
      "line": 22,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Yields all elements from input iterable that do not verify a given predicate.\n *\n * @example\n * // returns [ 0 , 2 , 4 , 6 , 8 ]\n * list( filter( x => x % 2 , range( 10 ) ) ) ;\n *\n * @param {Function} predicate - A unary function that returns a truthy or\n * falsy value.\n * @param {Iterable} iterable - The input iterable.\n * @returns {Iterator}\n *\n ",
      "range": [
        0,
        359
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    }
  ]
}