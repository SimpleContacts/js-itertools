{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_zip2",
            "range": [
              9,
              14
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 14
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "_zip2",
            "range": [
              9,
              14
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 14
              }
            }
          },
          "range": [
            9,
            14
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 14
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_count",
            "range": [
              17,
              23
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 17
              },
              "end": {
                "line": 1,
                "column": 23
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "_count",
            "range": [
              17,
              23
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 17
              },
              "end": {
                "line": 1,
                "column": 23
              }
            }
          },
          "range": [
            17,
            23
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 17
            },
            "end": {
              "line": 1,
              "column": 23
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "..",
        "raw": "'..'",
        "range": [
          31,
          35
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 31
          },
          "end": {
            "line": 1,
            "column": 35
          }
        }
      },
      "range": [
        0,
        37
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 37
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Yields (index,element) tuples where the elements are taken from the input\n * iterable. You can choose the starting index. The starting index is\n * <code>0</code> by default.\n *\n * @example\n * // returns [ [ 0 , 'a' ] , [ 1 , 'b' ] , [ 2 , 'c' ] ]\n * list( enumerate( 'abc' ) ) ;\n *\n * @example\n * // returns [ [ 1 , 'a' ] , [ 2 , 'b' ] , [ 3 , 'c' ] ]\n * list( enumerate( 'abc' , 1 ) ) ;\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} [start=0] - The starting index.\n * @returns {Iterator}\n ",
          "range": [
            39,
            566
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "enumerate",
          "range": [
            583,
            592
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 16
            },
            "end": {
              "line": 20,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              595,
              603
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 28
              },
              "end": {
                "line": 20,
                "column": 36
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "start",
              "range": [
                605,
                610
              ],
              "loc": {
                "start": {
                  "line": 20,
                  "column": 38
                },
                "end": {
                  "line": 20,
                  "column": 43
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "range": [
                613,
                614
              ],
              "loc": {
                "start": {
                  "line": 20,
                  "column": 46
                },
                "end": {
                  "line": 20,
                  "column": 47
                }
              }
            },
            "range": [
              605,
              614
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 38
              },
              "end": {
                "line": 20,
                "column": 47
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "_zip2",
                  "range": [
                    628,
                    633
                  ],
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 8
                    },
                    "end": {
                      "line": 22,
                      "column": 13
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_count",
                      "range": [
                        635,
                        641
                      ],
                      "loc": {
                        "start": {
                          "line": 22,
                          "column": 15
                        },
                        "end": {
                          "line": 22,
                          "column": 21
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "start",
                        "range": [
                          643,
                          648
                        ],
                        "loc": {
                          "start": {
                            "line": 22,
                            "column": 23
                          },
                          "end": {
                            "line": 22,
                            "column": 28
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "range": [
                          651,
                          652
                        ],
                        "loc": {
                          "start": {
                            "line": 22,
                            "column": 31
                          },
                          "end": {
                            "line": 22,
                            "column": 32
                          }
                        }
                      }
                    ],
                    "range": [
                      635,
                      654
                    ],
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 15
                      },
                      "end": {
                        "line": 22,
                        "column": 34
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "iterable",
                    "range": [
                      657,
                      665
                    ],
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 37
                      },
                      "end": {
                        "line": 22,
                        "column": 45
                      }
                    }
                  }
                ],
                "range": [
                  628,
                  667
                ],
                "loc": {
                  "start": {
                    "line": 22,
                    "column": 8
                  },
                  "end": {
                    "line": 22,
                    "column": 47
                  }
                }
              },
              "range": [
                621,
                669
              ],
              "loc": {
                "start": {
                  "line": 22,
                  "column": 1
                },
                "end": {
                  "line": 22,
                  "column": 49
                }
              }
            }
          ],
          "range": [
            617,
            672
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 50
            },
            "end": {
              "line": 24,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          574,
          672
        ],
        "loc": {
          "start": {
            "line": 20,
            "column": 7
          },
          "end": {
            "line": 24,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Yields (index,element) tuples where the elements are taken from the input\n * iterable. You can choose the starting index. The starting index is\n * <code>0</code> by default.\n *\n * @example\n * // returns [ [ 0 , 'a' ] , [ 1 , 'b' ] , [ 2 , 'c' ] ]\n * list( enumerate( 'abc' ) ) ;\n *\n * @example\n * // returns [ [ 1 , 'a' ] , [ 2 , 'b' ] , [ 3 , 'c' ] ]\n * list( enumerate( 'abc' , 1 ) ) ;\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} [start=0] - The starting index.\n * @returns {Iterator}\n ",
            "range": [
              39,
              566
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        567,
        672
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Yields (index,element) tuples where the elements are taken from the input\n * iterable. You can choose the starting index. The starting index is\n * <code>0</code> by default.\n *\n * @example\n * // returns [ [ 0 , 'a' ] , [ 1 , 'b' ] , [ 2 , 'c' ] ]\n * list( enumerate( 'abc' ) ) ;\n *\n * @example\n * // returns [ [ 1 , 'a' ] , [ 2 , 'b' ] , [ 3 , 'c' ] ]\n * list( enumerate( 'abc' , 1 ) ) ;\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} [start=0] - The starting index.\n * @returns {Iterator}\n ",
          "range": [
            39,
            566
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    672
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 24,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Yields (index,element) tuples where the elements are taken from the input\n * iterable. You can choose the starting index. The starting index is\n * <code>0</code> by default.\n *\n * @example\n * // returns [ [ 0 , 'a' ] , [ 1 , 'b' ] , [ 2 , 'c' ] ]\n * list( enumerate( 'abc' ) ) ;\n *\n * @example\n * // returns [ [ 1 , 'a' ] , [ 2 , 'b' ] , [ 3 , 'c' ] ]\n * list( enumerate( 'abc' , 1 ) ) ;\n *\n * @param {Iterable} iterable - The input iterable.\n * @param {Number} [start=0] - The starting index.\n * @returns {Iterator}\n ",
      "range": [
        39,
        566
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    }
  ]
}