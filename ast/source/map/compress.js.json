{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_zip2",
            "range": [
              9,
              14
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 14
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "_zip2",
            "range": [
              9,
              14
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 14
              }
            }
          },
          "range": [
            9,
            14
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 14
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "..",
        "raw": "'..'",
        "range": [
          22,
          26
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 22
          },
          "end": {
            "line": 1,
            "column": 26
          }
        }
      },
      "range": [
        0,
        28
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 28
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Filters the first input iterable according to truthy and flasy values from a\n * second input iterable. The ith element of the first input iterable is output\n * if and only if the ith element of the second input iterable is truthy.\n *\n * @param {Iterable} iterable - The first input iterable to filter.\n * @param {Iterable} selector - The second input iterable containing the truthy and falsy\n * values.\n * @returns {Iterator}\n ",
          "range": [
            30,
            466
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "compress",
          "range": [
            484,
            492
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 17
            },
            "end": {
              "line": 13,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "iterable",
            "range": [
              495,
              503
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 28
              },
              "end": {
                "line": 13,
                "column": 36
              }
            }
          },
          {
            "type": "Identifier",
            "name": "selector",
            "range": [
              506,
              514
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 39
              },
              "end": {
                "line": 13,
                "column": 47
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ForOfStatement",
              "left": {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "take",
                          "range": [
                            533,
                            537
                          ],
                          "loc": {
                            "start": {
                              "line": 15,
                              "column": 13
                            },
                            "end": {
                              "line": 15,
                              "column": 17
                            }
                          }
                        },
                        {
                          "type": "Identifier",
                          "name": "item",
                          "range": [
                            540,
                            544
                          ],
                          "loc": {
                            "start": {
                              "line": 15,
                              "column": 20
                            },
                            "end": {
                              "line": 15,
                              "column": 24
                            }
                          }
                        }
                      ],
                      "range": [
                        531,
                        546
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 11
                        },
                        "end": {
                          "line": 15,
                          "column": 26
                        }
                      }
                    },
                    "init": null,
                    "range": [
                      531,
                      546
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 11
                      },
                      "end": {
                        "line": 15,
                        "column": 26
                      }
                    }
                  }
                ],
                "kind": "let",
                "range": [
                  527,
                  546
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 7
                  },
                  "end": {
                    "line": 15,
                    "column": 26
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "_zip2",
                  "range": [
                    550,
                    555
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 30
                    },
                    "end": {
                      "line": 15,
                      "column": 35
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "selector",
                    "range": [
                      557,
                      565
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 37
                      },
                      "end": {
                        "line": 15,
                        "column": 45
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "iterable",
                    "range": [
                      568,
                      576
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 48
                      },
                      "end": {
                        "line": 15,
                        "column": 56
                      }
                    }
                  }
                ],
                "range": [
                  550,
                  578
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 30
                  },
                  "end": {
                    "line": 15,
                    "column": 58
                  }
                }
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "Identifier",
                      "name": "take",
                      "range": [
                        591,
                        595
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 7
                        },
                        "end": {
                          "line": 17,
                          "column": 11
                        }
                      }
                    },
                    "consequent": {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "YieldExpression",
                        "argument": {
                          "type": "Identifier",
                          "name": "item",
                          "range": [
                            604,
                            608
                          ],
                          "loc": {
                            "start": {
                              "line": 17,
                              "column": 20
                            },
                            "end": {
                              "line": 17,
                              "column": 24
                            }
                          }
                        },
                        "delegate": false,
                        "range": [
                          598,
                          608
                        ],
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 14
                          },
                          "end": {
                            "line": 17,
                            "column": 24
                          }
                        }
                      },
                      "range": [
                        598,
                        610
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 14
                        },
                        "end": {
                          "line": 17,
                          "column": 26
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      586,
                      610
                    ],
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 2
                      },
                      "end": {
                        "line": 17,
                        "column": 26
                      }
                    }
                  }
                ],
                "range": [
                  581,
                  614
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 61
                  },
                  "end": {
                    "line": 19,
                    "column": 2
                  }
                }
              },
              "range": [
                521,
                614
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 1
                },
                "end": {
                  "line": 19,
                  "column": 2
                }
              }
            }
          ],
          "range": [
            517,
            617
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 50
            },
            "end": {
              "line": 21,
              "column": 1
            }
          }
        },
        "generator": true,
        "expression": false,
        "range": [
          474,
          617
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 7
          },
          "end": {
            "line": 21,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Filters the first input iterable according to truthy and flasy values from a\n * second input iterable. The ith element of the first input iterable is output\n * if and only if the ith element of the second input iterable is truthy.\n *\n * @param {Iterable} iterable - The first input iterable to filter.\n * @param {Iterable} selector - The second input iterable containing the truthy and falsy\n * values.\n * @returns {Iterator}\n ",
            "range": [
              30,
              466
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        467,
        617
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Filters the first input iterable according to truthy and flasy values from a\n * second input iterable. The ith element of the first input iterable is output\n * if and only if the ith element of the second input iterable is truthy.\n *\n * @param {Iterable} iterable - The first input iterable to filter.\n * @param {Iterable} selector - The second input iterable containing the truthy and falsy\n * values.\n * @returns {Iterator}\n ",
          "range": [
            30,
            466
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    617
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 21,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Filters the first input iterable according to truthy and flasy values from a\n * second input iterable. The ith element of the first input iterable is output\n * if and only if the ith element of the second input iterable is truthy.\n *\n * @param {Iterable} iterable - The first input iterable to filter.\n * @param {Iterable} selector - The second input iterable containing the truthy and falsy\n * values.\n * @returns {Iterator}\n ",
      "range": [
        30,
        466
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    }
  ]
}