{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_range",
            "range": [
              9,
              15
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 15
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "_range",
            "range": [
              9,
              15
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 15
              }
            }
          },
          "range": [
            9,
            15
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 15
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./_range",
        "raw": "'./_range'",
        "range": [
          23,
          33
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 23
          },
          "end": {
            "line": 1,
            "column": 33
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Yields values in a range, separated by a fixed constant called step. If this\n * step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * @param {Number} [start=0] - The starting value.\n * @param {Number} stop - The stopping value.\n * @param {Number} [step=1] - The step value.\n * @returns {Iterator}\n ",
          "range": [
            37,
            576
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "range",
          "range": [
            593,
            598
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 16
            },
            "end": {
              "line": 15,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "start",
            "range": [
              601,
              606
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 24
              },
              "end": {
                "line": 15,
                "column": 29
              }
            }
          },
          {
            "type": "Identifier",
            "name": "stop",
            "range": [
              609,
              613
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 32
              },
              "end": {
                "line": 15,
                "column": 36
              }
            }
          },
          {
            "type": "Identifier",
            "name": "step",
            "range": [
              616,
              620
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 39
              },
              "end": {
                "line": 15,
                "column": 43
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "Identifier",
                  "name": "stop",
                  "range": [
                    632,
                    636
                  ],
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 6
                    },
                    "end": {
                      "line": 17,
                      "column": 10
                    }
                  }
                },
                "right": {
                  "type": "Identifier",
                  "name": "undefined",
                  "range": [
                    641,
                    650
                  ],
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 15
                    },
                    "end": {
                      "line": 17,
                      "column": 24
                    }
                  }
                },
                "range": [
                  632,
                  650
                ],
                "loc": {
                  "start": {
                    "line": 17,
                    "column": 6
                  },
                  "end": {
                    "line": 17,
                    "column": 24
                  }
                }
              },
              "consequent": {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "_range",
                    "range": [
                      660,
                      666
                    ],
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 34
                      },
                      "end": {
                        "line": 17,
                        "column": 40
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "range": [
                        668,
                        669
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 42
                        },
                        "end": {
                          "line": 17,
                          "column": 43
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "start",
                      "range": [
                        672,
                        677
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 46
                        },
                        "end": {
                          "line": 17,
                          "column": 51
                        }
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "range": [
                        680,
                        681
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 54
                        },
                        "end": {
                          "line": 17,
                          "column": 55
                        }
                      }
                    }
                  ],
                  "range": [
                    660,
                    683
                  ],
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 34
                    },
                    "end": {
                      "line": 17,
                      "column": 57
                    }
                  }
                },
                "range": [
                  653,
                  685
                ],
                "loc": {
                  "start": {
                    "line": 17,
                    "column": 27
                  },
                  "end": {
                    "line": 17,
                    "column": 59
                  }
                }
              },
              "alternate": null,
              "range": [
                627,
                685
              ],
              "loc": {
                "start": {
                  "line": 17,
                  "column": 1
                },
                "end": {
                  "line": 17,
                  "column": 59
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "Identifier",
                  "name": "step",
                  "range": [
                    693,
                    697
                  ],
                  "loc": {
                    "start": {
                      "line": 19,
                      "column": 6
                    },
                    "end": {
                      "line": 19,
                      "column": 10
                    }
                  }
                },
                "right": {
                  "type": "Identifier",
                  "name": "undefined",
                  "range": [
                    702,
                    711
                  ],
                  "loc": {
                    "start": {
                      "line": 19,
                      "column": 15
                    },
                    "end": {
                      "line": 19,
                      "column": 24
                    }
                  }
                },
                "range": [
                  693,
                  711
                ],
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 6
                  },
                  "end": {
                    "line": 19,
                    "column": 24
                  }
                }
              },
              "consequent": {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "_range",
                    "range": [
                      721,
                      727
                    ],
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 34
                      },
                      "end": {
                        "line": 19,
                        "column": 40
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "start",
                      "range": [
                        729,
                        734
                      ],
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 42
                        },
                        "end": {
                          "line": 19,
                          "column": 47
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "stop",
                      "range": [
                        737,
                        741
                      ],
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 50
                        },
                        "end": {
                          "line": 19,
                          "column": 54
                        }
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "range": [
                        744,
                        745
                      ],
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 57
                        },
                        "end": {
                          "line": 19,
                          "column": 58
                        }
                      }
                    }
                  ],
                  "range": [
                    721,
                    747
                  ],
                  "loc": {
                    "start": {
                      "line": 19,
                      "column": 34
                    },
                    "end": {
                      "line": 19,
                      "column": 60
                    }
                  }
                },
                "range": [
                  714,
                  749
                ],
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 27
                  },
                  "end": {
                    "line": 19,
                    "column": 62
                  }
                }
              },
              "alternate": null,
              "range": [
                688,
                749
              ],
              "loc": {
                "start": {
                  "line": 19,
                  "column": 1
                },
                "end": {
                  "line": 19,
                  "column": 62
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "_range",
                  "range": [
                    759,
                    765
                  ],
                  "loc": {
                    "start": {
                      "line": 21,
                      "column": 8
                    },
                    "end": {
                      "line": 21,
                      "column": 14
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "start",
                    "range": [
                      767,
                      772
                    ],
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 16
                      },
                      "end": {
                        "line": 21,
                        "column": 21
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "stop",
                    "range": [
                      775,
                      779
                    ],
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 24
                      },
                      "end": {
                        "line": 21,
                        "column": 28
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "step",
                    "range": [
                      782,
                      786
                    ],
                    "loc": {
                      "start": {
                        "line": 21,
                        "column": 31
                      },
                      "end": {
                        "line": 21,
                        "column": 35
                      }
                    }
                  }
                ],
                "range": [
                  759,
                  788
                ],
                "loc": {
                  "start": {
                    "line": 21,
                    "column": 8
                  },
                  "end": {
                    "line": 21,
                    "column": 37
                  }
                }
              },
              "range": [
                752,
                790
              ],
              "loc": {
                "start": {
                  "line": 21,
                  "column": 1
                },
                "end": {
                  "line": 21,
                  "column": 39
                }
              }
            }
          ],
          "range": [
            623,
            793
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 46
            },
            "end": {
              "line": 23,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          584,
          793
        ],
        "loc": {
          "start": {
            "line": 15,
            "column": 7
          },
          "end": {
            "line": 23,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Yields values in a range, separated by a fixed constant called step. If this\n * step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * @param {Number} [start=0] - The starting value.\n * @param {Number} stop - The stopping value.\n * @param {Number} [step=1] - The step value.\n * @returns {Iterator}\n ",
            "range": [
              37,
              576
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        577,
        793
      ],
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Yields values in a range, separated by a fixed constant called step. If this\n * step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * @param {Number} [start=0] - The starting value.\n * @param {Number} stop - The stopping value.\n * @param {Number} [step=1] - The step value.\n * @returns {Iterator}\n ",
          "range": [
            37,
            576
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    793
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 23,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Yields values in a range, separated by a fixed constant called step. If this\n * step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * @param {Number} [start=0] - The starting value.\n * @param {Number} stop - The stopping value.\n * @param {Number} [step=1] - The step value.\n * @returns {Iterator}\n ",
      "range": [
        37,
        576
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    }
  ]
}